{% import _self as macros %}
{% import '_templates/elements/logo.twig' as Logo %}
{% set image = siteSettings.siteLogo.one() %}
{% set navNodes = craft.navigation.nodes().handle('default').level(1).all() %}

<nav class="w-full flex justify-center bg-brandWhiteBlue relative z-[999] px-8">
    <div class="w-full block-container flex items-center justify-between relative py-12">
        {# LOGO #}
        <a href="/">
            <img class="h-24" src="{{ image.url }}">
        </a>

        {# DESKTOP NAV #}
        <div class="hidden lg:flex gap-4">
            {% for node in navNodes %}
                {% if node.hasDescendants() %}
                    {{ macros.navNodes(node) }}
                {% else %}
                    <a href="{{ node.url }}" class="px-6 py-4 text-black hover:text-surface-900 hover:bg-surface-300 hover:shadow-inner transition-colors duration-200 w-max" >
                        {{ node.title }}
                    </a>
                {% endif %}
            {% endfor %}
        </div>

        {# MOBILE NAV #}
        <div x-data="{open: false}"
             class="flex lg:hidden h-12 items-center justify-center aspect-square">

            {# menu burger button #}
            <svg x-on:click="open = !open" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="cursor-pointer stroke-black z-[9999] w-10 h-10" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
                <line class="origin-center transition-transform duration-400" :class="open ? 'rotate-45 stroke-black translate-y-1 -translate-x-1' : 'rotate-0'" x1="4" x2="20" y1="6" y2="6"></line>
                <line class="origin-center transition-opacity duration-400" :class="open ? 'opacity-0 stroke-black' : 'opacity-100'" x1="4" x2="20" y1="12" y2="12"></line>
                <line class="origin-center transition-transform duration-400" :class="open ? '-rotate-45 stroke-black -translate-y-1 -translate-x-1' : 'rotate-0'" x1="4" x2="20" y1="18" y2="18"></line>
            </svg>

            <div :class="open ? 'translate-x-0' : 'translate-x-full'" class="bg-white transition-transform duration-200 fixed w-[90%] h-full top-0 right-0 z-50 flex flex-col pl-6 pt-[150px] gap-8 text-lg">
                <div class="overflow-y-auto flex-grow">
                    {% for node in navNodes %}
                        <p class="mb-6"><a href="{{ node.url }}">{{ node.title }}</a></p>
                        {% if node.hasDescendants() %}
                            <ul class="border-l-2 border-gray-600 px-5 pl-3 relative top-[-20px]">
                                {% for child in node.children %}
                                    <p class="my-[30px]"><a href="{{ child.url }}">{{ child.title }}</a></p>
                                {% endfor %}
                            </ul>
                        {% endif %}
                    {% endfor %}
                </div>
            </div>

            <div x-on:click="open = !open" :class="open ? 'opacity-50 delay-200 duration-300' : 'opacity-0'" class="left-0 top-0 fixed h-full w-[11%] bg-black z-40">
            </div>

        </div>

        {# DESKTOP USER ICON #}
        <div class="relative hidden lg:block z-20" id="desktopUserIcon">
            <div class="cursor-pointer">
                <svg class="feather feather-user" fill="none" height="40px" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>
            </div>
            <div class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg hidden" id="desktopUserMenu">
                <a href="{{ logoutUrl }}" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Sign Out</a>
            </div>
        </div>

        {# MOBILE USER ICON #}
        <div class="fixed bottom-4 right-4 z-[9999] lg:hidden" id="mobileUserIcon">
            <div class="cursor-pointer bg-white rounded-full p-2 shadow-lg">
                <svg class="feather feather-user" fill="none" height="40px" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>
            </div>
            <div class="absolute right-0 bottom-full mb-2 w-48 bg-white rounded-md shadow-lg hidden" id="mobileUserMenu">
                <a href="{{ logoutUrl }}" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Sign Out</a>
            </div>
        </div>

    </div>
</nav>


{# Desktop Main Links #}
{% macro navNodes(node) %}
    {% import _self as macros %}
    <div class="relative flex justify-center"
         x-data="{open: false}"
         x-on:mouseleave="open = false">

        <a href="{{ node.url }}"
           x-on:mouseenter="open = true"
           :class="open ? 'bg-surface-300 text-black shadow-inner' : ''"
           class="relative px-6 py-4 flex text-black transition-colors duration-200 w-max">

            {{ node.title }} <span :class="open ? 'rotate-90 origin-center' : ''" class="pl-1 transition-transform"><i data-lucide="chevron-right" class="stroke-black"></i></span>
        </a>

        <ul
                x-show="open"
                x-ref="menu"
                class="absolute w-[200px] bg-gray-100 top-[53px] [&_li>*]:rounded-none z-[9999] shadow-xl p-6">
            <span class="arrow-before"></span>
            {% for subnode in node.children() %}
                {{ macros.subNavNodes(subnode) }}
            {% endfor %}
        </ul>
    </div>
{% endmacro %}

{# Children of main links #}
{% macro subNavNodes(node) %}
    {% import _self as macros %}
    {% if node.hasDescendants() %}
        <li class="relative" x-data="{subOpen: false}" x-on:mouseleave="subOpen = false">
            <a href="{{ node.url }}"
               x-on:mouseenter="subOpen = true"
               class="text-black hover:text-gray-500 hover:bg-surface-100 p-4 flex justify-between items-center">
                {{ node.title }}
                <span><i data-lucide="chevron-right" class="stroke-primary-800"></i></span>
            </a>
            <ul x-show="subOpen"
                class="absolute left-full top-0 w-[200px] bg-gray-100 shadow-xl p-4">
                {% for subnode in node.children() %}
                    {{ macros.secondLevelSubNavNodes(subnode) }}
                {% endfor %}
            </ul>
        </li>
    {% else %}
        <a href="{{ node.url }}"><li class="text-black hover:text-gray-500 hover:bg-surface-100 p-4">{{ node.title }}</li></a>
    {% endif %}
{% endmacro %}

{# Children of the children #}
{% macro secondLevelSubNavNodes(node) %}
    <a href="{{ node.url }}">
        <li class="text-black hover:text-gray-500 hover:bg-surface-100 p-4">
            {{ node.title }}
        </li>
    </a>
{% endmacro %}


{% macro mobileNavNodes(node) %}
    {% import _self as macros %}
    {% for subnode in node %}
        {% if node.hasDescendants() %}
            <button>Subnodes:</button>
            {{ macros.mobileNavNodes(subnode) }}

        {% else %}
            <li>{{ node.title }}</li>
        {% endif %}
    {% endfor %}
{% endmacro %}

<style>
    .arrow-before {
        background-color: #f2f2f2;
        content: "";
        height: 1rem;
        left: 5.5rem;
        opacity: 1;
        position: absolute;
        top: -.5rem;
        transform: rotate(45deg);
        width: 1rem;
        z-index: 98;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        function setupUserMenu(iconId, menuId) {
            const userIcon = document.getElementById(iconId);
            const userMenu = document.getElementById(menuId);

            if (userIcon && userMenu) {
                userIcon.addEventListener('click', function(event) {
                    event.stopPropagation();
                    userMenu.classList.toggle('hidden');
                    console.log(iconId + ' clicked, menu visibility:', !userMenu.classList.contains('hidden'));
                });
            }
        }

        setupUserMenu('mobileUserIcon', 'mobileUserMenu');
        setupUserMenu('desktopUserIcon', 'desktopUserMenu');

        // Close the menus when clicking outside
        document.addEventListener('click', function(event) {
            if (!event.target.closest('#mobileUserIcon') && !event.target.closest('#desktopUserIcon')) {
                document.getElementById('mobileUserMenu').classList.add('hidden');
                document.getElementById('desktopUserMenu').classList.add('hidden');
            }
        });
    });
</script>